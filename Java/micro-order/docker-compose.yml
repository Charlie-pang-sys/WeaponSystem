services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

  # NameServer 服务
  rmq-namesrv:
    image: apache/rocketmq:4.9.4
    container_name: rmq-namesrv
    ports:
      - "9876:9876"
    command: ["sh", "-c", "cd /home/rocketmq/rocketmq-4.9.4/bin && exec ./mqnamesrv"]
    environment:
      - JAVA_OPTS=-server -Xms512m -Xmx512m -Xmn256m
      - SPRING_ROCKETMQ_NAME-SERVER=rmq-namesrv
    volumes:
      - ./data/namesrv/logs:/home/rocketmq/rocketmq-4.9.4/logs
      - ./data/namesrv/store:/home/rocketmq/rocketmq-4.9.4/store

  # Broker 服务
  rmq-broker:
    image: apache/rocketmq:4.9.4
    container_name: rmq-broker
    ports:
      - "10911:10911"  # Broker 服务端口
      - "10909:10909"  # HA 高可用端口（主从复制）
    command: ["sh", "-c", "nohup /home/rocketmq/rocketmq-4.9.4/bin/mqbroker -n rmq-namesrv:9876 -c /home/rocketmq/rocketmq-4.9.4/conf/broker.conf & tail -f /dev/null"]
    environment:
      - JAVA_OPTS=-server -Xms512m -Xmx512m -Xmn256m
    volumes:
      - ./data/broker/logs:/home/rocketmq/rocketmq-4.9.4/logs
      - ./data/broker/store:/home/rocketmq/rocketmq-4.9.4/store
      - ./conf/broker.conf:/home/rocketmq/rocketmq-4.9.4/conf/broker.conf
    depends_on:
      - rmq-namesrv

  # RocketMQ Dashboard（管理界面）
  rmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rmq-dashboard
    ports:
      - "8899:8080"  # 外部访问端口，可改为 9090:8080
    environment:
      - JAVA_OPTS=-Drocketmq.namesrv.addr=rmq-namesrv:9876 -Dserver.port=8080
    depends_on:
      - rmq-namesrv

  order-system:
    build: 
      context: /app/order-system
      dockerfile: Dockerfile
    container_name: order-system
    ports:
      - "8080:8080"
    environment:
      # ✅ 配置 MySQL 地址（使用服务名 'mysql' 作为 host）
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/order?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

      # ✅ 配置 Redis 地址
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_DATABASE=0

      # ✅ 配置 RocketMQ 地址
      - ROCKETMQ_NAME-SERVER=rmq-namesrv:9876
    depends_on:
      - mysql
      - redis
      - rmq-namesrv

  order-worker:
    build: 
      context: /app/order-worker
      dockerfile: Dockerfile
    container_name: order-worker
    ports:
      - "8081:8081"
    environment:
      # ✅ 配置 MySQL 地址（使用服务名 'mysql' 作为 host）
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/order?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

      # ✅ 配置 Redis 地址
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_DATABASE=0

      # ✅ 配置 RocketMQ 地址
      - ROCKETMQ_NAME-SERVER=rmq-namesrv:9876
    depends_on:
      - mysql
      - redis
      - rmq-namesrv

  alarm-system:
    build: 
      context: /app/alarm-system
      dockerfile: Dockerfile
    container_name: alarm-system
    ports:
      - "8082:8082"
    environment:
      # ✅ 配置 MySQL 地址（使用服务名 'mysql' 作为 host）
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/order?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

      # ✅ 配置 RocketMQ 地址
      - ROCKETMQ_NAME-SERVER=rmq-namesrv:9876
    depends_on:
      - rmq-namesrv
      - mysql
  timertask-system:
    build: 
      context: /app/timertask-system
      dockerfile: Dockerfile
    container_name: timertask-system
    ports:
      - "8083:8083"
    environment:
      # ✅ 配置 MySQL 地址（使用服务名 'mysql' 作为 host）
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/order?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
    depends_on:
      - mysql